name: CI CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [created]

env:
  CONFIGURATION: Release
  DOTNET: 6.0.x
  DOCKER_VERSION: 1.1.5

jobs:
  build-test:
    runs-on: ubuntu-latest
    name: Build and test
    steps:
    - uses: actions/checkout@v2

    - name: Setup
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET }}

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Test
      run: dotnet test --no-build --configuration ${{ env.CONFIGURATION }}

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: csharp

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  github-package-deploy:
    if: ${{ github.event_name == 'push' }}
    name: GitHub package deploy
    runs-on: ubuntu-latest
    needs: [build-test, analyze]
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish
      run: dotnet publish 'src/ApiHealthCheck.Console\ApiHealthCheck.Console.csproj' --configuration ${{ env.CONFIGURATION }} -o 'src/ApiHealthCheck.Console/bin/publish'

    - name: Docker build
      run: docker build -f 'src/ApiHealthCheck.Console/Dockerfile' -t ghcr.io/arnab-developer/apihealthcheck/apihealthcheck:${{ env.DOCKER_VERSION }} .

    - name: Docker push
      run: |
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u Arnab-Developer --password-stdin
        docker push ghcr.io/arnab-developer/apihealthcheck/apihealthcheck:${{ env.DOCKER_VERSION }}
        docker logout ghcr.io

  dockerhub-deploy:
    if: ${{ github.event_name == 'release' }}
    name: Dockerhub deploy
    runs-on: ubuntu-latest
    needs: [build-test, analyze]
    environment:
      name: Dockerhub
      url: https://hub.docker.com/r/45862391/apihealthcheck
    steps:
    - name: Checkout code
      uses: actions/checkout@v2   
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Publish
      run: dotnet publish 'src/ApiHealthCheck.Console\ApiHealthCheck.Console.csproj' --configuration ${{ env.CONFIGURATION }} -o 'src/ApiHealthCheck.Console/bin/publish'

    - name: Docker build
      run: docker build -f 'src/ApiHealthCheck.Console/Dockerfile' -t 45862391/apihealthcheck:${{ env.DOCKER_VERSION }} .

    - name: Docker push
      run: |
        echo "${{ secrets.DOCKERHUB_PWD }}" | docker login -u 45862391 --password-stdin
        docker push 45862391/apihealthcheck:${{ env.DOCKER_VERSION }}
        docker logout